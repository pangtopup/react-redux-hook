{"ast":null,"code":"var _jsxFileName = \"/Users/thanchanokmaneesutham/TPE/Internship/react-redux-hook/src/Routers.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Container from \"@mui/material/Container\";\nimport Login from \"./components/pages/LoginPage\";\nimport { UnauthorizedPage, NotFoundPage } from \"./components/pages/error\"; //User\n\nimport ProfilePage from \"./components/pages/user/profile\";\nimport Notification from \"./components/pages/NotificationPage\"; //Manager\n\nimport { DashboardManagerPage, ApprovedPage } from \"./components/pages/manager\"; // Admin\n\nimport { DashboardOnePage, DashboardTwoPage, DashboardThreePage, SettingPage, EmployeesPage, EmployeesFormPage } from \"./components/pages/admin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  content: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: 0\n  }\n}));\n\nconst Routers = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n\n  const RedirectLogin = () => /*#__PURE__*/_jsxDEV(Route, {\n    children: /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n\n  const AdminRoute = ({\n    component: Component,\n    ...rest\n  }) => {\n    if (currentUser) {\n      return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n        render: props => currentUser.roles.includes(\"ROLE_ADMIN\") === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/unauthorized\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(RedirectLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const ManagerRoute = ({\n    component: Component,\n    ...rest\n  }) => {\n    if (currentUser) {\n      return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n        render: props => currentUser.roles.includes(\"ROLE_MANAGER\") === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/unauthorized\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(RedirectLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const UserRoute = ({\n    component: Component,\n    ...rest\n  }) => {\n    if (currentUser) {\n      return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n        render: props => currentUser.roles.includes(\"ROLE_USER\") === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/unauthorized\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(RedirectLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.content,\n    maxWidth: false,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: [\"/\"],\n        component: () => currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/unauthorized\",\n        component: UnauthorizedPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserRoute, {\n        exact: true,\n        path: \"/notification\",\n        component: Notification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserRoute, {\n        exact: true,\n        path: \"/profile\",\n        component: ProfilePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ManagerRoute, {\n        exact: true,\n        path: \"/manager/dashboard\",\n        component: DashboardManagerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ManagerRoute, {\n        exact: true,\n        path: \"/manager/approved\",\n        component: ApprovedPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminRoute, {\n        exact: true,\n        path: \"/admin/dashboard1\",\n        component: DashboardOnePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminRoute, {\n        exact: true,\n        path: \"/admin/dashboard2\",\n        component: DashboardTwoPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminRoute, {\n        exact: true,\n        path: \"/admin/dashboard3\",\n        component: DashboardThreePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminRoute, {\n        exact: true,\n        path: \"/admin/employees\",\n        component: EmployeesPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminRoute, {\n        exact: true,\n        path: [\"/admin/employees/form\", \"/admin/employees/form/:id\"],\n        component: EmployeesFormPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminRoute, {\n        exact: true,\n        path: \"/admin/setting\",\n        component: SettingPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        component: NotFoundPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Routers, \"GB6CFm6iDdj0z5FgXmuDykMb42w=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = Routers;\nexport default Routers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routers\");","map":{"version":3,"sources":["/Users/thanchanokmaneesutham/TPE/Internship/react-redux-hook/src/Routers.js"],"names":["React","makeStyles","Route","Redirect","Switch","useSelector","Container","Login","UnauthorizedPage","NotFoundPage","ProfilePage","Notification","DashboardManagerPage","ApprovedPage","DashboardOnePage","DashboardTwoPage","DashboardThreePage","SettingPage","EmployeesPage","EmployeesFormPage","useStyles","theme","content","flexGrow","display","justifyContent","padding","Routers","classes","user","currentUser","state","auth","RedirectLogin","AdminRoute","component","Component","rest","props","roles","includes","ManagerRoute","UserRoute"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Container from \"@mui/material/Container\";\n\nimport Login from \"./components/pages/LoginPage\";\nimport { UnauthorizedPage, NotFoundPage } from \"./components/pages/error\";\n\n//User\nimport ProfilePage from \"./components/pages/user/profile\";\nimport Notification from \"./components/pages/NotificationPage\";\n\n//Manager\nimport { DashboardManagerPage, ApprovedPage } from \"./components/pages/manager\";\n\n// Admin\nimport {\n  DashboardOnePage,\n  DashboardTwoPage,\n  DashboardThreePage,\n  SettingPage,\n  EmployeesPage,\n  EmployeesFormPage,\n} from \"./components/pages/admin\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: 0,\n  },\n}));\n\nconst Routers = () => {\n  const classes = useStyles();\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const RedirectLogin = () => (\n    <Route>\n      <Redirect to=\"/login\" />\n    </Route>\n  );\n\n  const AdminRoute = ({ component: Component, ...rest }) => {\n    if (currentUser) {\n      return (\n        <Route\n          {...rest}\n          render={(props) =>\n            currentUser.roles.includes(\"ROLE_ADMIN\") === true ? (\n              <Component {...props} />\n            ) : (\n              <Redirect to=\"/unauthorized\" />\n            )\n          }\n        />\n      );\n    } else {\n      return <RedirectLogin />;\n    }\n  };\n\n  const ManagerRoute = ({ component: Component, ...rest }) => {\n    if (currentUser) {\n      return (\n        <Route\n          {...rest}\n          render={(props) =>\n            currentUser.roles.includes(\"ROLE_MANAGER\") === true ? (\n              <Component {...props} />\n            ) : (\n              <Redirect to=\"/unauthorized\" />\n            )\n          }\n        />\n      );\n    } else {\n      return <RedirectLogin />;\n    }\n  };\n\n  const UserRoute = ({ component: Component, ...rest }) => {\n    if (currentUser) {\n      return (\n        <Route\n          {...rest}\n          render={(props) =>\n            currentUser.roles.includes(\"ROLE_USER\") === true ? (\n              <Component {...props} />\n            ) : (\n              <Redirect to=\"/unauthorized\" />\n            )\n          }\n        />\n      );\n    } else {\n      return <RedirectLogin />;\n    }\n  };\n\n  return (\n    <Container className={classes.content} maxWidth={false}>\n      <Switch>\n        <Route\n          exact\n          path={[\"/\"]}\n          component={() =>\n            currentUser ? <Redirect to=\"/profile\" /> : <Redirect to=\"/login\" />\n          }\n        />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/unauthorized\" component={UnauthorizedPage} />\n\n        {/* User Route */}\n        <UserRoute exact path=\"/notification\" component={Notification} />\n        <UserRoute exact path=\"/profile\" component={ProfilePage} />\n\n        {/* Manager Route */}\n        <ManagerRoute\n          exact\n          path=\"/manager/dashboard\"\n          component={DashboardManagerPage}\n        />\n        <ManagerRoute exact path=\"/manager/approved\" component={ApprovedPage} />\n\n        {/* Admin Route */}\n        <AdminRoute\n          exact\n          path=\"/admin/dashboard1\"\n          component={DashboardOnePage}\n        />\n        <AdminRoute\n          exact\n          path=\"/admin/dashboard2\"\n          component={DashboardTwoPage}\n        />\n        <AdminRoute\n          exact\n          path=\"/admin/dashboard3\"\n          component={DashboardThreePage}\n        />\n        <AdminRoute exact path=\"/admin/employees\" component={EmployeesPage} />\n        <AdminRoute\n          exact\n          path={[\"/admin/employees/form\", \"/admin/employees/form/:id\"]}\n          component={EmployeesFormPage}\n        />\n        <AdminRoute exact path=\"/admin/setting\" component={SettingPage} />\n\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </Container>\n  );\n};\n\nexport default Routers;\n"]},"metadata":{},"sourceType":"module"}