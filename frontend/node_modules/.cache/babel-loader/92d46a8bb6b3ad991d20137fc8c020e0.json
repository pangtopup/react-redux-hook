{"ast":null,"code":"var _jsxFileName = \"/Users/thanchanokmaneesutham/TPE/Internship/react-redux-hook/src/components/pages/LoginPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport withStyles from '@mui/styles/withStyles';\nimport { Card, CardContent, CardMedia, Button, Typography, TextField } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport { red } from \"@mui/material/colors\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { login } from \"../../actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  rootCard: {\n    width: 345,\n    marginTop: 100\n  },\n  media: {\n    height: 85,\n    padding: 20,\n    paddingBottom: 0,\n    margin: 10\n  },\n  version: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: 10\n  },\n  showPassword: {\n    position: \"absolute\",\n    justifyContent: \"center\"\n  }\n});\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length < 8) {\n    errors.password = \"Contain at least 8 characters\";\n  }\n\n  return errors;\n};\n\nconst LoginButton = withStyles(theme => ({\n  root: {\n    marginTop: 10,\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[500],\n    \"&:hover\": {\n      backgroundColor: red[700]\n    }\n  }\n}))(Button);\n\nconst PasswordField = ({\n  isSubmitting,\n  values,\n  handleChange,\n  error\n}) => {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    variant: \"outlined\",\n    style: {\n      width: \"100%\",\n      marginTop: 8\n    },\n    error: error,\n    fullWidth: true,\n    margin: \"normal\",\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: \"outlined-adornment-password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n      disabled: isSubmitting,\n      label: \"Password\",\n      name: \"password\",\n      id: \"password\",\n      type: showPassword ? \"text\" : \"password\",\n      value: values.password,\n      onChange: handleChange,\n      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          edge: \"end\",\n          size: \"large\",\n          children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordField, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n\n_c = PasswordField;\n\nconst LoginPage = props => {\n  _s2();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {//anyNameFunction();\n  }, []);\n\n  const showForm = ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting,\n    handleClickShowPassword,\n    handleMouseDownPassword\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"username\",\n        name: \"username\",\n        label: \"Username\",\n        onChange: handleChange,\n        value: values.username,\n        autoFocus: true,\n        error: errors.username,\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), errors.username && /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: \"#f44336\"\n        },\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(PasswordField, {\n        isSubmitting: isSubmitting,\n        values: values,\n        handleChange: handleChange,\n        name: \"password\",\n        error: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: \"#f44336\"\n        },\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        disabled: isSubmitting,\n        className: classes.submit,\n        children: [\" \", isSubmitting ? \"Please wait...\" : \"Sign In\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        noWrap: true,\n        className: classes.version,\n        children: [\"Version \", process.env.REACT_APP_VERSION]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.rootCard,\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: `${process.env.PUBLIC_URL}/assets/LOGO SCG.png`,\n        title: \"Contemplative Reptile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            dispatch(login(values.username, values.password)).then(() => {\n              props.history.push(\"/profile\");\n              window.location.reload();\n            }).catch(() => {});\n          },\n          initialValues: {\n            username: \"\",\n            password: \"\",\n            showPassword: false\n          },\n          validate: validate,\n          children: props => showForm(props)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(LoginPage, \"Y9tZvcqC0bKJ4LE1NdhuzeAtVFg=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c2 = LoginPage;\nexport default LoginPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PasswordField\");\n$RefreshReg$(_c2, \"LoginPage\");","map":{"version":3,"sources":["/Users/thanchanokmaneesutham/TPE/Internship/react-redux-hook/src/components/pages/LoginPage.js"],"names":["React","useEffect","useState","makeStyles","withStyles","Card","CardContent","CardMedia","Button","Typography","TextField","IconButton","OutlinedInput","InputLabel","InputAdornment","FormControl","useDispatch","Formik","red","Visibility","VisibilityOff","login","useStyles","root","display","justifyContent","rootCard","width","marginTop","media","height","padding","paddingBottom","margin","version","flexGrow","showPassword","position","validate","values","errors","username","password","length","LoginButton","theme","color","palette","getContrastText","backgroundColor","PasswordField","isSubmitting","handleChange","error","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","LoginPage","props","classes","dispatch","showForm","touched","handleSubmit","setFieldValue","submit","process","env","REACT_APP_VERSION","PUBLIC_URL","setSubmitting","then","history","push","window","location","reload","catch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport withStyles from '@mui/styles/withStyles';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  TextField,\n} from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport { red } from \"@mui/material/colors\";\n\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\n\nimport { login } from \"../../actions/auth\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  rootCard: {\n    width: 345,\n    marginTop: 100,\n  },\n  media: {\n    height: 85,\n    padding: 20,\n    paddingBottom: 0,\n    margin: 10,\n  },\n  version: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: 10,\n  },\n  showPassword: {\n    position: \"absolute\",\n    justifyContent: \"center\",\n  },\n});\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Required\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length < 8) {\n    errors.password = \"Contain at least 8 characters\";\n  }\n\n  return errors;\n};\n\nconst LoginButton = withStyles((theme) => ({\n  root: {\n    marginTop: 10,\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[500],\n    \"&:hover\": {\n      backgroundColor: red[700],\n    },\n  },\n}))(Button);\n\nconst PasswordField = ({ isSubmitting, values, handleChange, error }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <FormControl variant=\"outlined\" style={{ width: \"100%\", marginTop: 8 }} error={error} fullWidth margin=\"normal\">\n      <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n      <OutlinedInput\n        disabled={isSubmitting}\n        label=\"Password\"\n        name=\"password\"\n        id=\"password\"\n        type={showPassword ? \"text\" : \"password\"}\n        value={values.password}\n        onChange={handleChange}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n              size=\"large\">\n              {values.showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n    </FormControl>\n  );\n};\n\nconst LoginPage = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    //anyNameFunction();\n  }, []);\n\n  const showForm = ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting,\n    handleClickShowPassword,\n    handleMouseDownPassword,\n  }) => {\n    return (\n      <form onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          id=\"username\"\n          name=\"username\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          autoFocus\n          error={errors.username} \n          disabled={isSubmitting}\n        ></TextField>\n        \n        {errors.username && <Typography style={{ color:\"#f44336\" }} >{errors.username}</Typography>}\n        <PasswordField\n          isSubmitting={isSubmitting}\n          values={values}\n          handleChange={handleChange}\n          name=\"password\"\n          error={errors.password}\n        ></PasswordField>\n        {errors.password && <Typography style={{ color:\"#f44336\" }} >{errors.password}</Typography>}\n        <LoginButton\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          disabled={isSubmitting}\n          className={classes.submit}\n        >\n          {\" \"}\n          {isSubmitting ? \"Please wait...\" : \"Sign In\"}\n        </LoginButton>\n\n        <Typography variant=\"body2\" noWrap className={classes.version}>\n          Version {process.env.REACT_APP_VERSION}\n        </Typography>\n      </form>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.rootCard}>\n        <CardMedia\n          className={classes.media}\n          image={`${process.env.PUBLIC_URL}/assets/LOGO SCG.png`}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography variant=\"h4\">Login</Typography>\n          {/* HOC */}\n          <Formik\n            onSubmit={(values, { setSubmitting }) => {\n              dispatch(login(values.username, values.password))\n                .then(() => {\n                  props.history.push(\"/profile\");\n                  window.location.reload();\n                })\n                .catch(() => {});\n            }}\n            initialValues={{ username: \"\", password: \"\", showPassword: false }}\n            validate={validate}\n          >\n            {(props) => showForm(props)}\n          </Formik>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}