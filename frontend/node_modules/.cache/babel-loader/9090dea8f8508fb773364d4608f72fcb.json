{"ast":null,"code":"import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_MESSAGE } from \"./types\";\nimport AuthService from \"../services/auth.service\";\nexport const login = (username, password) => dispatch => {\n  return AuthService.login(username, password).then(data => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        user: data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    return Promise.reject();\n  });\n};\nexport const logout = () => dispatch => {\n  AuthService.logout();\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/Users/thanchanokmaneesutham/TPE/Internship/react-redux-hook/src/actions/auth.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","AuthService","login","username","password","dispatch","then","data","type","payload","user","Promise","resolve","error","message","response","toString","reject","logout"],"mappings":"AAAA,SACIA,aADJ,EAEIC,UAFJ,EAGIC,MAHJ,EAIIC,WAJJ,QAKS,SALT;AAOE,OAAOC,WAAP,MAAwB,0BAAxB;AAGA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAyBC,QAAD,IAAc;AACzD,SAAOJ,WAAW,CAACC,KAAZ,CAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCE,IAAtC,CACJC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEX,aADC;AAEPY,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAEH;AAAR;AAFF,KAAD,CAAR;AAKA,WAAOI,OAAO,CAACC,OAAR,EAAP;AACD,GARI,EASJC,KAAD,IAAW;AACT,UAAMC,OAAO,GACVD,KAAK,CAACE,QAAN,IACCF,KAAK,CAACE,QAAN,CAAeR,IADhB,IAECM,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OAFtB,IAGAD,KAAK,CAACC,OAHN,IAIAD,KAAK,CAACG,QAAN,EALF;AAOAX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAIA,WAAOa,OAAO,CAACM,MAAR,EAAP;AACD,GAtBI,CAAP;AAwBD,CAzBM;AA2BP,OAAO,MAAMC,MAAM,GAAG,MAAOb,QAAD,IAAc;AACxCJ,EAAAA,WAAW,CAACiB,MAAZ;AAEAb,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAET;AADC,GAAD,CAAR;AAGD,CANM","sourcesContent":["import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    SET_MESSAGE,\n  } from \"./types\";\n  \n  import AuthService from \"../services/auth.service\";\n\n  \n  export const login = (username, password) => (dispatch) => {\n    return AuthService.login(username, password).then(\n      (data) => {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: { user: data },\n        });\n  \n        return Promise.resolve();\n      },\n      (error) => {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n  \n        dispatch({\n          type: LOGIN_FAIL,\n        });\n  \n        return Promise.reject();\n      }\n    );\n  };\n  \n  export const logout = () => (dispatch) => {\n    AuthService.logout();\n  \n    dispatch({\n      type: LOGOUT,\n    });\n  };\n  "]},"metadata":{},"sourceType":"module"}